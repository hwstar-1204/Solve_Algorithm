#민겸 수 
"""
0 이상의 숫자 N
10^N, 5*10^N 꼴의 10진수 = M, K
1. 10^N꼴의 십진수 = n+1 
2. 5*10^N꼴의 십진수 = n개의 m뒤에 1개의 k를 이어붙인 문자열

1 -> 10의 n승이면 n+1개의 'M'을 앞에 둔다.
2 -> n개의 M 뒤에 + 'K' = 1에서의 m개수-1개 + k

한개 이상의 민겸 수를 이어붙여 만든다. 
MKKMMK = MK + K + MMK

민겸 수를 10진수로 바꾸는 방법
1. 1개 이상의 민겸 수로 문자열을 분리한다. 
2. 각각의 민겸 숫자를 십진수로 변환해서 순서대로 이어붙인다. 
3. 십진수로 바꾸는것은 십진수를 민겸 수로 바꾸는과정을 거꾸로한다. 

MK = 50, K = 5, MMK = 500
흠..
50 = 10^1 * 5*10^0 = MMK?? XX
   = 5*10^1 -> M+K = MK
5 = 5*10^0 = K
500 = 5*10^2 = MMK

두개의 꼴을 사용하는게 아니라 하나의 꼴만 사용해서 수를 만드는것
10의 제곱수는 M으로만
5의 배수꼴은 M과 K로 

MKKMMK
1. MK K MMK = 50+5+500 = 505500
2. MK K MM K = 50+5+10+5 = 505105
3. M K K MM K = 1+5+5+10+5 = 155105

- 최대값 구하는 방법
최대한 2번째 꼴(5의 배수)MK 꼴로 만들어야한다. 
M이 이어지다가 K가 나오면 끊는다. 
- 최소값 구하는 방법
최대한 1번째 꼴(10의 배수)M 꼴로 만들어야한다? XXXX 
M K K K M M K = 1+5+5+5+1+1+5 = 1555115?????

-> 최대한 M은 서로 붙혀야한다. 
M K K K MM K

ex1) MMKMKKM
MMK MK K M = 500+50+5+1 = 5005051
MM K M K K M = 10+5+1+5+5+1 = 1051551

M M K M K K M = 1+1+5+1+5+5+1 최소 아님 

"""



s = input().rstrip()

m = 0
min = ''
max = ''

for n in s:
    if n == 'M':
        m += 1
    else:
        if m > 0:
            max += str(5*10**m)
            min += str(10**m + 5)
        else:
            max += '5'
            min += '5'
        m = 0

if m > 0:
    max += '1'*m
    min += str(10**(m-1))

print(max,min,sep='\n')